{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst exploresSlice = createSlice({\n  name: \"explores\",\n  initialState: {\n    exploreList: []\n  },\n  reducers: {\n    getExploreListSuccess: (state, action) => {\n      const exploreList = action.payload.exploreList;\n      state.exploreList = exploreList;\n    }\n  }\n});\n\nconst getExploreList = () => {\n  return dispatch => {\n    axios.get(\"/api/exploreList.json\").then(res => {\n      if (res.data && res.data.success) {\n        dispatch(getExploreListSuccess(res.data.data));\n      }\n    });\n  };\n};\n\nconst {\n  actions,\n  reducer\n} = exploresSlice;\nexport const {\n  getExploreListSuccess\n} = actions;\nexport { getExploreList };\nexport default reducer;","map":{"version":3,"sources":["/Users/erbing/practice-web-projects/zhihu/src/redux/reducers/explores.js"],"names":["createSlice","axios","exploresSlice","name","initialState","exploreList","reducers","getExploreListSuccess","state","action","payload","getExploreList","dispatch","get","then","res","data","success","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,aAAa,GAAGF,WAAW,CAAC;AAChCG,EAAAA,IAAI,EAAE,UAD0B;AAEhCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,WAAW,EAAE;AADD,GAFkB;AAKhCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,qBAAqB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxC,YAAMJ,WAAW,GAAGI,MAAM,CAACC,OAAP,CAAeL,WAAnC;AACAG,MAAAA,KAAK,CAACH,WAAN,GAAoBA,WAApB;AACD;AAJO;AALsB,CAAD,CAAjC;;AAaA,MAAMM,cAAc,GAAG,MAAM;AAC3B,SAAQC,QAAD,IAAc;AACnBX,IAAAA,KAAK,CAACY,GAAN,CAAU,uBAAV,EAAmCC,IAAnC,CAAyCC,GAAD,IAAS;AAC/C,UAAIA,GAAG,CAACC,IAAJ,IAAYD,GAAG,CAACC,IAAJ,CAASC,OAAzB,EAAkC;AAChCL,QAAAA,QAAQ,CAACL,qBAAqB,CAACQ,GAAG,CAACC,IAAJ,CAASA,IAAV,CAAtB,CAAR;AACD;AACF,KAJD;AAKD,GAND;AAOD,CARD;;AAUA,MAAM;AAAEE,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAuBjB,aAA7B;AAEA,OAAO,MAAM;AAAEK,EAAAA;AAAF,IAA4BW,OAAlC;AAEP,SAASP,cAAT;AAEA,eAAeQ,OAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst exploresSlice = createSlice({\n  name: \"explores\",\n  initialState: {\n    exploreList: [],\n  },\n  reducers: {\n    getExploreListSuccess: (state, action) => {\n      const exploreList = action.payload.exploreList;\n      state.exploreList = exploreList;\n    },\n  },\n});\n\nconst getExploreList = () => {\n  return (dispatch) => {\n    axios.get(\"/api/exploreList.json\").then((res) => {\n      if (res.data && res.data.success) {\n        dispatch(getExploreListSuccess(res.data.data));\n      }\n    });\n  };\n};\n\nconst { actions, reducer } = exploresSlice;\n\nexport const { getExploreListSuccess } = actions;\n\nexport { getExploreList };\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}