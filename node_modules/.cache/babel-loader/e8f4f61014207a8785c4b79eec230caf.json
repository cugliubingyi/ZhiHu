{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst recommendsSlice = createSlice({\n  name: \"recommends\",\n  initialState: {\n    recommendList: []\n  },\n  reducers: {\n    getRecommendListSuccess: (state, action) => {\n      const recommendList = action.payload.recommendList;\n      console.log(recommendList);\n      state.recommendList = recommendList;\n    }\n  }\n});\n\nconst getRecommendList = () => {\n  return dispatch => {\n    axios.get('/api/recommendList.json').then(res => {\n      if (res.data && res.data.success) {\n        dispatch(getRecommendListSuccess(res.data.data));\n      }\n    });\n  };\n};\n\nconst {\n  actions,\n  reducer\n} = recommendsSlice;\nexport const {\n  getRecommendListSuccess\n} = actions;\nexport { getRecommendList };\nexport default reducer;","map":{"version":3,"sources":["/Users/erbing/practice-web-projects/zhihu/src/redux/reducers/recommends.js"],"names":["createSlice","axios","recommendsSlice","name","initialState","recommendList","reducers","getRecommendListSuccess","state","action","payload","console","log","getRecommendList","dispatch","get","then","res","data","success","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,eAAe,GAAGF,WAAW,CAAC;AAChCG,EAAAA,IAAI,EAAE,YAD0B;AAEhCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,aAAa,EAAE;AADL,GAFkB;AAKhCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,uBAAuB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxC,YAAMJ,aAAa,GAAGI,MAAM,CAACC,OAAP,CAAeL,aAArC;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYP,aAAZ;AACAG,MAAAA,KAAK,CAACH,aAAN,GAAsBA,aAAtB;AACH;AALK;AALsB,CAAD,CAAnC;;AAcA,MAAMQ,gBAAgB,GAAG,MAAM;AAC3B,SAAOC,QAAQ,IAAI;AACfb,IAAAA,KAAK,CAACc,GAAN,CAAU,yBAAV,EAAqCC,IAArC,CAA0CC,GAAG,IAAI;AAC7C,UAAIA,GAAG,CAACC,IAAJ,IAAYD,GAAG,CAACC,IAAJ,CAASC,OAAzB,EAAkC;AAC9BL,QAAAA,QAAQ,CAACP,uBAAuB,CAACU,GAAG,CAACC,IAAJ,CAASA,IAAV,CAAxB,CAAR;AACH;AACJ,KAJD;AAKH,GAND;AAOH,CARD;;AAUA,MAAM;AAAEE,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAuBnB,eAA7B;AAEA,OAAO,MAAM;AAAEK,EAAAA;AAAF,IAA8Ba,OAApC;AAEP,SAASP,gBAAT;AAEA,eAAeQ,OAAf","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nconst recommendsSlice = createSlice({\n    name: \"recommends\",\n    initialState: {\n        recommendList: []\n    },\n    reducers: {\n        getRecommendListSuccess: (state, action) => {\n            const recommendList = action.payload.recommendList;\n            console.log(recommendList);\n            state.recommendList = recommendList;\n        }\n    }\n});\n\nconst getRecommendList = () => {\n    return dispatch => {\n        axios.get('/api/recommendList.json').then(res => {\n            if (res.data && res.data.success) {\n                dispatch(getRecommendListSuccess(res.data.data));\n            }\n        })\n    }\n}\n\nconst { actions, reducer } = recommendsSlice;\n\nexport const { getRecommendListSuccess } = actions;\n\nexport { getRecommendList };\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}