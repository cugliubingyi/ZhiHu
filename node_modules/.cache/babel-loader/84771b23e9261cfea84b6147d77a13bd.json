{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst hotsSlice = createSlice({\n  name: 'hots',\n  initialState: {\n    hotList: []\n  },\n  reducers: {\n    getHotListSuccess: (state, action) => {\n      const hotList = action.payload.hotList;\n      state.hotList = hotList;\n    }\n  }\n});\n\nconst getHotList = () => {\n  return dispatch => {\n    axios.get('/api/hotList.json').then(res => {\n      if (res.data && res.data.success) {\n        dispatch(getHotListSuccess(res.data.data));\n      }\n    });\n  };\n};\n\nconst {\n  actions,\n  reducer\n} = hotsSlice;\nexport const {\n  getHotListSuccess\n} = actions;\nexport { getHotList };\nexport default reducer;","map":{"version":3,"sources":["/Users/erbing/practice-web-projects/zhihu/src/redux/reducers/hots.js"],"names":["createSlice","axios","hotsSlice","name","initialState","hotList","reducers","getHotListSuccess","state","action","payload","getHotList","dispatch","get","then","res","data","success","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,SAAS,GAAGF,WAAW,CAAC;AAC1BG,EAAAA,IAAI,EAAE,MADoB;AAE1BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,OAAO,EAAE;AADC,GAFY;AAK1BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,iBAAiB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAClC,YAAMJ,OAAO,GAAGI,MAAM,CAACC,OAAP,CAAeL,OAA/B;AACAG,MAAAA,KAAK,CAACH,OAAN,GAAgBA,OAAhB;AACH;AAJK;AALgB,CAAD,CAA7B;;AAaA,MAAMM,UAAU,GAAG,MAAM;AACrB,SAAOC,QAAQ,IAAI;AACfX,IAAAA,KAAK,CAACY,GAAN,CAAU,mBAAV,EAA+BC,IAA/B,CAAoCC,GAAG,IAAI;AACvC,UAAIA,GAAG,CAACC,IAAJ,IAAYD,GAAG,CAACC,IAAJ,CAASC,OAAzB,EAAkC;AAC9BL,QAAAA,QAAQ,CAACL,iBAAiB,CAACQ,GAAG,CAACC,IAAJ,CAASA,IAAV,CAAlB,CAAR;AACH;AACJ,KAJD;AAKH,GAND;AAOH,CARD;;AAUA,MAAM;AAAEE,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAuBjB,SAA7B;AAEA,OAAO,MAAM;AAAEK,EAAAA;AAAF,IAAwBW,OAA9B;AAEP,SAASP,UAAT;AAEA,eAAeQ,OAAf","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nconst hotsSlice = createSlice({\n    name: 'hots',\n    initialState: {\n        hotList: []\n    },\n    reducers: {\n        getHotListSuccess: (state, action) => {\n            const hotList = action.payload.hotList;\n            state.hotList = hotList;\n        }\n    }\n});\n\nconst getHotList = () => {\n    return dispatch => {\n        axios.get('/api/hotList.json').then(res => {\n            if (res.data && res.data.success) {\n                dispatch(getHotListSuccess(res.data.data));\n            }\n        })\n    }\n};\n\nconst { actions, reducer } = hotsSlice;\n\nexport const { getHotListSuccess } = actions;\n\nexport { getHotList };\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}