{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst followsSlice = createSlice({\n  name: \"follows\",\n  initialState: {\n    followList: []\n  },\n  reducers: {\n    getFollowListSuccess: (state, action) => {\n      const followList = action.payload.followList;\n      state.followList = followList;\n    }\n  }\n});\n\nconst getFollowList = () => {\n  return dispatch => {\n    axios.get(\"/api/followList.json\").then(res => {\n      if (res.data && res.data.success) {\n        dispatch(getFollowListSuccess(res.data.data));\n      }\n    });\n  };\n};\n\nconst {\n  actions,\n  reducer\n} = followsSlice;\nexport const {\n  getFollowListSuccess\n} = actions;\nexport { getFollowList };\nexport default reducer;","map":{"version":3,"sources":["/Users/erbing/practice-web-projects/zhihu/src/redux/reducers/follows.js"],"names":["createSlice","axios","followsSlice","name","initialState","followList","reducers","getFollowListSuccess","state","action","payload","getFollowList","dispatch","get","then","res","data","success","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAGF,WAAW,CAAC;AAC/BG,EAAAA,IAAI,EAAE,SADyB;AAE/BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,UAAU,EAAE;AADA,GAFiB;AAK/BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,oBAAoB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACvC,YAAMJ,UAAU,GAAGI,MAAM,CAACC,OAAP,CAAeL,UAAlC;AACAG,MAAAA,KAAK,CAACH,UAAN,GAAmBA,UAAnB;AACD;AAJO;AALqB,CAAD,CAAhC;;AAaA,MAAMM,aAAa,GAAG,MAAM;AAC1B,SAAQC,QAAD,IAAc;AACnBX,IAAAA,KAAK,CAACY,GAAN,CAAU,sBAAV,EAAkCC,IAAlC,CAAwCC,GAAD,IAAS;AAC9C,UAAIA,GAAG,CAACC,IAAJ,IAAYD,GAAG,CAACC,IAAJ,CAASC,OAAzB,EAAkC;AAChCL,QAAAA,QAAQ,CAACL,oBAAoB,CAACQ,GAAG,CAACC,IAAJ,CAASA,IAAV,CAArB,CAAR;AACD;AACF,KAJD;AAKD,GAND;AAOD,CARD;;AAUA,MAAM;AAAEE,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAuBjB,YAA7B;AAEA,OAAO,MAAM;AAAEK,EAAAA;AAAF,IAA2BW,OAAjC;AAEP,SAASP,aAAT;AAEA,eAAeQ,OAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst followsSlice = createSlice({\n  name: \"follows\",\n  initialState: {\n    followList: [],\n  },\n  reducers: {\n    getFollowListSuccess: (state, action) => {\n      const followList = action.payload.followList;\n      state.followList = followList;\n    },\n  },\n});\n\nconst getFollowList = () => {\n  return (dispatch) => {\n    axios.get(\"/api/followList.json\").then((res) => {\n      if (res.data && res.data.success) {\n        dispatch(getFollowListSuccess(res.data.data));\n      }\n    });\n  };\n};\n\nconst { actions, reducer } = followsSlice;\n\nexport const { getFollowListSuccess } = actions;\n\nexport { getFollowList };\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}