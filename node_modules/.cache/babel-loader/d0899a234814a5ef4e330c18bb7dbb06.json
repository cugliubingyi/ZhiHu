{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst waitingsSlice = createSlice({\n  name: \"waitings\",\n  initialState: {\n    waitingList: []\n  },\n  reducers: {\n    getWaitingListSuccess: (state, action) => {\n      const waitingList = action.payload.waitingList;\n      state.waitingList = waitingList;\n    }\n  }\n});\n\nconst getWaitingList = () => {\n  return dispatch => {\n    axios.get('/api/waitingList.json').then(res => {\n      if (res.data && res.data.success) {\n        dispatch(getWaitingListSuccess(res.data.data));\n      }\n    });\n  };\n};\n\nconst {\n  actions,\n  reducer\n} = waitingsSlice;\nexport const {\n  getWaitingListSuccess\n} = actions;\nexport { getWaitingList };\nexport default reducer;","map":{"version":3,"sources":["/Users/erbing/practice-web-projects/zhihu/src/redux/reducers/waitings.js"],"names":["createSlice","axios","waitingsSlice","name","initialState","waitingList","reducers","getWaitingListSuccess","state","action","payload","getWaitingList","dispatch","get","then","res","data","success","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,aAAa,GAAGF,WAAW,CAAC;AAC9BG,EAAAA,IAAI,EAAE,UADwB;AAE9BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,WAAW,EAAE;AADH,GAFgB;AAK9BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,qBAAqB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,YAAMJ,WAAW,GAAGI,MAAM,CAACC,OAAP,CAAeL,WAAnC;AACAG,MAAAA,KAAK,CAACH,WAAN,GAAoBA,WAApB;AACH;AAJK;AALoB,CAAD,CAAjC;;AAaA,MAAMM,cAAc,GAAG,MAAM;AACzB,SAAOC,QAAQ,IAAI;AACfX,IAAAA,KAAK,CAACY,GAAN,CAAU,uBAAV,EAAmCC,IAAnC,CAAwCC,GAAG,IAAI;AAC3C,UAAIA,GAAG,CAACC,IAAJ,IAAYD,GAAG,CAACC,IAAJ,CAASC,OAAzB,EAAkC;AAC9BL,QAAAA,QAAQ,CAACL,qBAAqB,CAACQ,GAAG,CAACC,IAAJ,CAASA,IAAV,CAAtB,CAAR;AACH;AACJ,KAJD;AAKH,GAND;AAOH,CARD;;AAUA,MAAM;AAAEE,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAuBjB,aAA7B;AAEA,OAAO,MAAM;AAAEK,EAAAA;AAAF,IAA4BW,OAAlC;AAEP,SAASP,cAAT;AAEA,eAAeQ,OAAf","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nconst waitingsSlice = createSlice({\n    name: \"waitings\",\n    initialState: {\n        waitingList: []\n    },\n    reducers: {\n        getWaitingListSuccess: (state, action) => {\n            const waitingList = action.payload.waitingList;\n            state.waitingList = waitingList;\n        }\n    }\n});\n\nconst getWaitingList = () => {\n    return dispatch => {\n        axios.get('/api/waitingList.json').then(res => {\n            if (res.data && res.data.success) {\n                dispatch(getWaitingListSuccess(res.data.data));\n            }\n        })\n    };\n};\n\nconst { actions, reducer } = waitingsSlice;\n\nexport const { getWaitingListSuccess } = actions;\n\nexport { getWaitingList };\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}